% กล่าวถึงรายละเอียดการดำเนินงานและการพัฒนาโครงงานทั้งหมด แยกเป็นหัวข้อตามความเหมาะสม
% หัวข้อในนี้เป็นเพียงตัวอย่างเท่านั้น ท่านสามารถแยกหัวข้อได้เองตามความเหมาะสมของเนื้อหาโครงงาน


[[section: อุปกรณ์]]
	[[subsection: อุปกรณ์ด้านซอฟต์แวร์]]
		ซอฟต์แวร์ที่ใช้ทั้งหมดประกอบด้วย[[ulist]]
			#คอมไพเลอร์ภาษา Python ที่สนับสนุนภาษา Python รุ่น 3.5
			#Python เป็นภาษาที่สร้างและพัฒนาใน raspberry pi
			#Python เป็นภาษาที่สร้างและพัฒนาใน raspberry pi
			#Node JS เป็น  platform ที่สร้างและพัฒนาใน IOS
			#Flask เป็น library ของ python ที่ช่วยในการสร้างแล้วพัฒนา web service
			#Android studio ใช้เพื่อสร้างและพัฒนา mobile application ในระบบ Android
			#Java เป็นภาษาที่ใช้สร้างและพัฒนา mobile application ในระบบ Android
			#XML เป็นภาษาที่ใช้สร้าง layout ของ mobile application ในระบบ Android
			#ListView ใช้เพื่อแสดง layout ให้เป็นแถวๆที่เป็นแบบเดียวกัน โดยใช้ข้อมูลที่เป็น list 
			#Firebase realtime database ใช้สำหรับเก็บข้อมูลต่างๆของระบบ และมีการ   ตอบสนองเป็นแบบ real time
		[[end]]
[[subsection: อุปกรณ์ด้านฮาร์ดแวร์]]
	[[subsubsection: Raspberry Pi]]
	จากภาพ 3.1 เป็นบอร์ดคอมพิวเตอร์ขนาดเล็กที่สามารถเชื่อมต่อกับจอมอนิเตอร์ คีย์บอร์ด และเมาส์ได้ สามารถนำมาประยุกต์ใช้ในการทำโครงงานทางด้านอิเล็กทรอนิกส์ การเขียนโปรแกรม หรือเป็นเครื่องคอมพิวเตอร์ตั้งโต๊ะขนาดเล็ก ไม่ว่าจะเป็นการทำงาน Spreadsheet Word Processing ท่องอินเทอร์เน็ต ส่งอีเมลล์ หรือเล่นเกมส์ อีกทั้งยังสามารถเล่นไฟล์วีดีโอความละเอียดสูง (High-Definition) ได้อีกด้วย
บอร์ด Raspberry Pi รองรับระบบปฏิบัติการลินุกซ์ (Linux Operating System) ได้หลายระบบ เช่น Raspbian (Debian) Pidora (Fedora) และ Arch Linux เป็นต้น โดยติดตั้งบน SD Card บอร์ด Raspberry Pi นี้ถูกออกแบบมาให้มี CPU GPU และ RAM อยู่ภายในชิฟเดียวกัน มีจุดเชื่อมต่อ GPIO ให้ผู้ใช้สามารถนำไปใช้ร่วมกับอุปกรณ์อิเล็กทรอนิกส์อื่นๆ ได้อีกด้วย
คุณสมบัติที่สำคัญของ Raspberry Pi 3 ได้แก่

[[ulist]]
#CPU: Quad-core 1.2 GHz ARM Cortex-A53 แบบ 64 bits
#GPU: Broadcom VideoCore IV @ 400 MHz
#Memory ขนาด 1 GB (LPDDR2-900 SDRAM)
#หน่วยความจุแบบ MicroSD
#4 USB ports
#1 Ethernet port
#802.11n Wireless LAN
#Bluetooth 4.0
#รองรับ HDMI/Composite ผ่านทาง RCA Jack
#GPIO 40 pins
[[end]]
[[subsubsection: Moblie phone]]
*ระบบปฏิบัติการไอโอเอส (IOS)*  เป็นระบบปฏิบัติการที่ถูกพัฒนาโดยบริษัท Apple โดยมี logo ตามภาพ 3.2  ซึ่งใช้ในผลิตภัณฑ์ที่บริษัท Apple เป็นผู้ผลิต อุปกรณ์สื่อสารภายใต้ยี่ห้อ Apple  เช่น iPod, iPad และ iPhone   
*ระบบปฏิบัติการ (Android)*   เป็นระบบปฏิบัติการที่ถูกพัฒนาโดยบริษัท Google โดยมี logo ตามภาพ 3.3  ซึ่งเป็นระบบปฏิบัติการแบบ OpenSource  ซึ่งเป็นระบบปฏิบัติการแบบเปิดหรือแบบฟรีนั่นเอง ดังนั้นผู้ผลิตโทรศัพท์เคลื่อนที่และ Tablet  จึงนิยมนํา Android  ไปใช้เป็น OS เช่น HTC, Samsung
[[subsubsection: Light Dependent Resistor]]
เซ็นเซอร์แสง (Optical Sensor) คืออุปกรณ์อิเล็กทรอนิกส์ที่เปลี่ยนแปลงค่าความต้านทาน หรือการนำไฟฟ้า ที่ไหลผ่านตัวมันได้ เมื่อมีแสงมาตกกระทบ มีหลายชนิด  ตัวต้านทานแปรค่าตามแสง หรือ LDR (ย่อมาจาก Light Dependent Resistor) คืออุปกรณ์อิเล็กทรอนิกส์ที่ใช้ตรวจจับแสง โดยหามีแสงมาตกกระทบน้อย จะทำให้มีความต้านทานมาก และหากมีแสงมาตกกระทบมาก ความต้านทานจะน้อยลงLDR นั้นทำมาจากสารกึงตัวนำแคดเมียมซัลไฟล์ (Cds) หรือแคดเมียมซีลิไนด์ (Cdse) นำมาฉาบลงบนแผ่นเซรามิคที่ใช้เป็นฐานรอง ลักษณะตามภาพ 3.4

[[subsubsection: ไอซีเบอร์ DS1820]]
DS18B20 เป็น IC วัดอุณหภูมิแบบดิจิตอล ของ Dallas Semiconductor สามารถวัดอุณหภูมิเป็นหน่วยองศา C ในช่วง -55C ถึง 125C ที่ความละเอียด 9-12 บิต และมีความแม่นยำอยู่ที่ 0.5C ในช่วง -10C ถึง 85C ในกรณีที่เป็นตัวถังแบบ TO-92 นั้นจะมีโครงสร้าง และขาดังแสดงในภาพที่ 1

การสื่อสารและควบคุม DS18B20 นั้นสามารถทำได้โดยใช้บัสข้อมูลแบบ 1-wire ของ Dallas Semiconductor ซึ่งใช้สายสัญญาณเพียงแค่เส้นเดียวเท่านั้น ภายใน DS18B20 แต่ละตัวมีโค๊ดประจำตัวขนาด 64 บิต ทำให้สามารถใช้งาน DS18B20 หลายตัวทำงานบนบัสแบบ 1 wire พร้อมกันได้ นอกจากนี้ DS18B20 ยังสามารถทำงานในโหมดพาราสิต (Parasite Power Mode) ซึ่งเป็นการทำงานโดยไม่ใช้ไฟเลี้ยง แต่ใช้พลังงานจากสายสัญญาณ 1-wire ซึ่งมีประโยชน์มากสำหรับการวัดอุณหภูมิระยะไกล หรือในการใช้งานในที่ ๆ มีเนื้อที่จำกัด แต่ในบทความนี้จะกล่าวถึงรายละเอียดการใช้งานขั้นพื้นฐานในโหมดธรรมดาเท่านั้น ลักษณะตามภาพ 3.5 

[[subsubsection: รีเลย์ (Relay) ]]

เป็นอุปกรณ์ที่เปลี่ยนพลังงานไฟฟ้าให้เป็นพลังงานแม่เหล็ก เพื่อใช้ในการดึงดูดหน้าสัมผัสของ(contact)ให้เปลี่ยนสภาวะ โดยการป้อนกระแสไฟฟ้าให้กับขดลวด เพื่อทำการปิดหรือเปิดหน้าสัมผัสคล้ายกับสวิตช์อิเล็กทรอนิกส์ ซึ่งเราสามารถนำรีเลย์ไปประยุกต์ใช้ ในการควบคุมวงจรต่าง ๆ ในงานช่างอิเล็กทรอนิกส์มากมายรีเลย์ ลักษณะตามภาพ 3.6 ประกอบด้วยส่วนสำคัญ 2 ส่วนหลักก็คือ
[[list]]
#ส่วนของขดลวด (coil) เหนี่ยวนำกระแสต่ำ ทำหน้าที่สร้างสนามแม่เหล็กไฟฟ้าให้แกนโลหะไปกระทุ้งให้หน้าสัมผัสต่อกัน ทำงานโดยการรับแรงดันจากภายนอกต่อคร่อมที่ขดลวดเหนี่ยวนำนี้ เมื่อขดลวดได้รับแรงดัน(ค่าแรงดันที่รีเลย์ต้องการขึ้นกับชนิดและรุ่นตามที่ผู้ผลิตกำหนด) จะเกิดสนามแม่เหล็กไฟฟ้าทำให้แกนโลหะด้านในไปกระทุ้งให้แผ่นหน้าสัมผัสต่อกัน
#ส่วนของหน้าสัมผัส (contact) ทำหน้าที่เหมือนสวิตช์จ่ายกระแสไฟให้กับอุปกรณ์ที่เราต้องการนั่นเอง
[[end]]

*จุดต่อใช้งานมาตรฐาน ประกอบด้วย* (ตามภาพที่ 3.7)
[[list]]
#จุดต่อ NC ย่อมาจาก normal close หมายความว่าปกติดปิด หรือ หากยังไม่จ่ายไฟให้ขดลวดเหนี่ยวนำหน้าสัมผัสจะติดกัน โดยทั่วไปเรามักต่อจุดนี้เข้ากับอุปกรณ์หรือเครื่องใช้ไฟฟ้าที่ต้องการให้ทำงานตลอดเวลาเช่น

#จุดต่อ NO ย่อมาจาก normal open หมายความว่าปกติเปิด หรือหากยังไม่จ่ายไฟให้ขดลวดเหนี่ยวนำหน้าสัมผัสจะไม่ติดกัน โดยทั่วไปเรามักต่อจุดนี้เข้ากับอุปกรณ์หรือเครื่องใช้ไฟฟ้าที่ต้องการควบคุมการเปิดปิดเช่นโคมไฟสนามหรือหน้าบ้าน

#จุดต่อ C ย่อมากจาก common คือจุดร่วมที่ต่อมาจากแหล่งจ่ายไฟ
[[end]]

[[subsubsection: Arduino]]
Arduino เป็นบอร์ดไมโครคอนโทรเลอร์ตระกูล AVR ที่มีการพัฒนาแบบ Open Sourceคือมีการเปิดเผยข้อมูลทั้งด้าน Hardware และ Software ตัว บอร์ด Arduino ถูกออกแบบมาให้ใช้งานได้ง่าย ดังนั้นจึงเหมาะสำหรับผู้เริ่มต้นศึกษา ทั้งนี้ผู้ใช้งานยังสามารถดัดแปลง เพิ่มเติม พัฒนาต่อยอดทั้งตัวบอร์ด หรือโปรแกรมต่อได้อีกด้วย

ความง่ายของบอร์ด Arduino ในการต่ออุปกรณ์เสริมต่างๆ คือผู้ใช้งานสามารถต่อวงจรอิเล็กทรอนิคส์จากภายนอกแล้วเชื่อมต่อเข้ามาที่ขา I/O ของบอร์ด (ดูตัวอย่างภาพที่ 3.8) หรือเพื่อความสะดวกสามารถเลือกต่อกับบอร์ดเสริม (Arduino Shield) ประเภทต่างๆ(ดูตัวอย่างภาพที่ 3.9)เช่น Arduino XBee Shield, Arduino Music Shield, Arduino Relay Shield, Arduino Wireless Shield, Arduino GPRS Shield เป็นต้น มาเสียบกับบอร์ดบนบอร์ด Arduino แล้วเขียนโปรแกรมพัฒนาต่อได้เลย

[[subsubsection: NRF24L01]]
โมดูล NRF24L01 เป็นโมดูลสื่อสารไร้สาย ที่สามารถเขียนโปรแกรมให้เป็นได้ ทั้งตัวรับและตัวส่ง ตามภาพที่ 3.10 สามารถใช้กับ Arduino ได้หลาย ๆ ตัวพร้อมกัน มีความเร็ว 2.4G จึงสื่อสารได้รวดเร็วและไม่ต้องการเสาอากาศที่ยาว มีขนาดเล็กสะดวกในการต่อใช้งาน สามารถประยุกต์ใช้งานได้หลายอย่างเช่น  อุณหภูมิ ความชื้น การแจ้งเตือนต่าง ๆ ได้ในระยะ 1-100 เมตร โมดูลนี้ใช้ชิฟ  nRF24L01+ m ทำงานด้วยความเร็วสูง High-speed SPI interface ใช้พลังงานต่ำ รองรับการทำงานร่วมกับ Arduino 

[[subsubsection: IR Transmitter]]
	เป็นโมดูลที่ไว้ส่งสัญญาณอินฟาเรด ตามภาพที่ 3.11 ที่ความยาวคลื่น 940 นาโนเมตร


[[subsubsection: IR  Receiver ]]
	เป็นโมดูลที่ไว้รับสัญญาณอินฟาเรด ตามภาพที่ 3.12

[[section: ภาพรวมของโครงงาน]]
	[[subsection: รายละเอียดการทำงานของแอพพลิเคชั่น]]
		ในภาพ 3.13 เป็นภาพของโครงสร้างโดยรวมของระบบซึ่งจะแบ่งเป็น 2 ส่วนดังนี้
		[[subsubsection:*ส่วนของ Application* ระบบจะสั่งการโดยผ่านแอปพลิเคชั่นซึ่งมี 2 ระบบได้แก่]]
	*ระบบปฎิบัติการ IOS*

			ในภาพ  3.14  เป็นหน้าเมนูของระบบไอโอเอสในหน้านี้จะแสดงลายละเอียดที่เราสามารถเลือกที่จะเพิ่มอุปกรณ์ สร้างคำสั่งด้วยเสียง หรือแม้กระทั่งตั้งเวลาในการควบคุมอุปกรณ์ได้
			การเพิ่มอุปกรณ์ควบคุมนั้นทำได้โดยการกดที่ปุ่ม Product แล้วจากนั้นจะปรากฏดังภาพ 3.15  ก็สามารถกด Add Product ได้เลย 
	
	ในภาพ 3.16 เป็นอุปกรณ์ที่เรามีทั้งหมดมาจากการ Add Product 
		
		ในการสร้างชุดคำสั่งด้วยเสียงนั้นสามารถทำได้โดยไปหน้าเมนูดังภาพ 3.14 จากนั้นกด Scenes จะปรากฏดังภาพ 3.19 ล่างสุดนั้นให้กด Create New จะปรากฏดังภาพ 3.15 ในหน้านี้เราสามารถเลือกอุปกรณ์ที่เราจะทำการสั่งการควบคุมได้เลย สามารถเลือกได้มากกว่า 1 อุปกรณ์ จากนั้นกด  Next ด้านมุมขวาบน จะปรากฏดังภาพ 3.18  ในหน้านี้เป็นคำสั่งที่เราสามารถเลือกที่จะสั่งเสียงด้วยคำพูดต่างๆ 
	ส่วนการตั้งเวลานั้นสามารถทำได้โดยไปที่หน้าเมนูดังภาพ 3.14 จากนั้นกด Schedules จะปรากฏดังภาพ 3.20 กด Add Schedules  จะปรากฏดังภาพ 3.21 ในหน้านี้จะให้เราเลือกว่าเราจะเอาชุดคำสั่งไหนบ้างที่จะทำการเพิ่มเข้าไปใน Schedules  เมื่อเลือกเสร็จแล้วทำการกด Next  จะปรากฏดังภาพ 3.22 ในหน้านี้เราสามารถทำการเลือกได้ว่าจะเอา วัน/เวลา อะไร

ส่วนการตั้งเวลานั้นสามารถทำได้โดยไปที่หน้าเมนูดังภาพ 3.14 จากนั้นกด Schedules จะปรากฏดังภาพ 3.20 กด Add Schedules  จะปรากฏดังภาพ 3.21 ในหน้านี้จะให้เราเลือกว่าเราจะเอาชุดคำสั่งไหนบ้างที่จะทำการเพิ่มเข้าไปใน Schedules  เมื่อเลือกเสร็จแล้วทำการกด Next  จะปรากฏดังภาพ 3.22 ในหน้านี้เราสามารถทำการเลือกได้ว่าจะเอา วัน/เวลา อะไร
		
		*ระบบปฎิบัติการ Android*
		
		ในภาพ 3.23 เป็นหน้าแรกของ แอพพลิเคชั่น ในระบบปฏิบัติการ แอนดรอยด์ ซึ่งจะเป็นหน้าให้ ลงชื่อเข้าใช้โดยใช้ google account เมื่อกดปุ่มแล้วจะแสดงหน้าต่างขึ้นมาดังภาพ 3.24 เพื่อให้เลือกหรือเพิ่ม จากนั้นเมื่อทำการลงชื่อเข้าใช้ ไปแล้วจะเข้าสู่หน้าหลัก ดังภาพที่ 3.25 ซึ่งจะมีหน้าต่างให้กรอก IP address เพื่อเชื่อมต่อเว็ปเซอร์วิส เมื่อกรอกแล้วจะแสดงดังภาพ 3.26 คือหน้าที่จะแสดง อุปกรณ์ไฟฟ้า และเมื่อกดไปที่ scene จะแสดงฉาก ดังภาพ 3.30

ในภาพ 3.27 จะเป็นเมนูซึ่งก็จะ Add tool, Add Scene, Add Bluetooth Address, Set IP Address, Sign out และจะแสดง อุณหภูมิ และความเข้มของแสง

เมื่อกดเมนูเพิ่มอุปกรณ์(Add tool)ก็จะแสดงดังภาพ 3.28 ซึ่งจะมีให้เลือก 3 รูปแบบ คือ รีโมต, สวิตช์ และ ผ้าม่าน ซึ่งเมื่อกดเพิ่ม แล้วจะแสดงอุปกรณ์ดังภาพ 3.29

เมื่อกดเมนูเพิ่มฉาก(Add Scene) ก็แสดงดังภาพ 3.31 ก็จะมีให้ใส่ชื่อของฉากและอุปกรณ์ที่ได้เพิ่มไว้ให้เลือก เมื่อกด next ก็จะไปหน้าที่ตั้งค่าของฉากดังภาพ 3.32 ซึ่งมี การตั้งเวลา, ตั้งค่าเช็คอุณหภูมิ, ตั้งค่าเช็คความเข้มแสงและตั้งค่าเช็คบลูทูธ ซึ่งเมื่อกด set time จะแสดงดังภาพ 3.33 โดยสามารถตั้งเป็นแบบรายสัปดาห์ได้ และเมื่อกด set temperature ก็จะแสดงดังภาพ 3.34โดยจะให้ใส่เลขอุณหหมิ และรูปแบบ มากกว่า หรือ น้อยกว่ากว่าเท่ากับ และเมื่อกด set light intensity ก็จะแสดงดังภาพ 3.35 โดยจะให้ใส่เลขความสว่าง และรูปแบบ มากกว่า หรือ น้อยกว่ากว่าเท่ากับ และเมื่อกด set Bluetooth ก็จะแสดงดังภาพ 3.36 โดยจะให้เลือกว่า เมื่อเปิด หรือปิดได้ จากนั้นเมื่อกดสร้างแล้ว จะแสดง ข้อมูลฉาก ดังภาพ 3.37

เมื่อกดเมนูเพิ่ม Bluetooth Address(Add Bluetooth Address) ซึ่งระบบจะทำการเช็คได้เพียงแค่ทีละ 1 เครื่องเท่านั้น การกดเพิ่มจึงเป็นการเซต Bluetooth address ให้ระบบเช็คเครื่องของผู้ใช้นั้น ดังภาพ 3.38

เมื่อกดเมนูตั้งค่า IP address (Set IP Address) จะแสดงดังภาพ 3.39 โดยจะมีช่องให้ใส่เลข IP เพื่อเชื่อมต่อเว็บเซอร์วิสของระบบ


	[[subsubsection:*ส่วนของ Server*]]

	Raspberry PI จะทำหน้าที่เป็นเซิฟเวอร์ซึ่งเป็นเว็ปเซอร์วิสคอยรับรีเควสต่างๆ เข้ามาและประมวลผลคำสั่งแล้วสั่งการ โมดูลต่างๆ โดยถ้าเป็นระบบปฏิบัติการ แอนดรอยด์ส่งข้อมูลแบบ JSON และจะทำการเช็คจาก URL ที่ส่งมาแล้วสั่งการไปยัง โมดูลที่ตั้งค่าไว้ ส่วนของระบบปฏิบัติการไอโอเอสจะทำการจำลองตัวเองให้ HomeKitสามารถเชื่อมต่อได้ซึ่ง HomeKit จะทำการประมวลคำสั่งแล้วสั่งการไปยังModuleที่ตั้งค่าไว้เช่นกัน

[[subsubsection:*การทำงาน*]]

เมื่อมีคำสั่งแอปพลิเคชั่นจะส่งรีเควสไปหา Raspberry PI ที่ทำหน้าที่เป็นเซอร์วิสซึ่งจะทำการประมวลผลคำสั่งที่ส่งมาแล้วก็จะทำงานตามที่ตั้งค่าไว้ซึ่งแต่ละคำสั่งจะเช่นเก็บ ค่าไว้ใน database เช่นถ้าสั่งปิดแอร์ Raspberry PI ก็จะส่งไปที่ IR transmitter ให้ทำหน้าที่ส่ง สัญญาณอินฟาเรดไปที่แอร์โดยใช้ LIRC[[cite(Ajtop)]]  หรือถ้าต้องการเช็คอุณหภูมิก็จะส่งไปหาTemperature sensor[[cite(Cookbook)]] เพื่อรับค่าอุณหภูมิมาแสดง  ในแอปพลิเคชั่นนอกจากนี้ยังสามารถเช็คว่าผู้ใช้อยู่ใน บ้านหรือไม่ ได้จากสัญญาณBluetooth[[cite(Bluetooth)]] จากโทรศัพท์อีกด้วยโดยในแอปพลิเคชั่นสามารถ ตั้งค่าเป็นชุดคำสั่งต่างๆได้เอง เช่น เวลาออกเสียงว่า “โหมดดูหนัง” ให้เปิดแอร์, เปิดทีวี พร้อม กับปิดม่านพร้อมกันได้หรือตั้งเงื่อนไขว่าถ้าอุณหภูมิมากกว่า 37 องศาให้เปิดแอร์
	[[subsection: โครงสร้างของฐานข้อมูล]]
	[[ulist]]
		#System Tableจากตาราง 3.1 เป็นตารางที่ใช้เก็บข้อมูลของระบบ

		#User Table จากตาราง 3.2 เป็นตารางที่ใช้เก็บข้อมูลผู้ใช้แต่ละคน

		#Tool Table จากตาราง 3.3 เป็นตารางที่ใช้เก็บข้อมูลอุปกรณ์ของผู้ใช้งานนั้นๆ

		#Scene Table จากตาราง 3.4 เป็นตารางที่ใช้เก็บข้อมูลฉากของผู้ใช้งานนั้นๆ
[[end]]

[[table[| c | c | c |](and):Syetem Table]]
\hline
Name         & Type   & Description           \\ \hline
system\_id   & int    & IDของระบบ             \\ \hline
mac\_blue    & string & เลข MAC ของ Bluetooth \\ \hline
status\_blue & bool   & สถานะของ Bluetooth    \\ \hline
light        & double & ค่าความสว่างของระบบ   \\ \hline
temp         & double & ค่าอุณหภูมิของระบบ    \\ \hline
[[end]]

[[table[| c | c | c |](and):User Table]]
\hline
Name     & Type   & Description          \\ \hline
user\_id & string & ID ของผู้ใช้         \\ \hline
ip       & string & IP ของ server ที่ใช้ \\ \hline
tool     & Tool   & ข้อมูลของอุปกรณ์     \\ \hline
[[end]]

[[table[| c | c | c |](and):Tool Table]]
\hline
Name     & Type   & Description     \\ \hline
tool\_id & string & ID ของอุปกรณ์   \\ \hline
name     & string & ชื่อของอุปกรณ์  \\ \hline
status   & bool   & สถานะของอุปกรณ์ \\ \hline
type     & string & ชนิดของอุปกรณ์  \\ \hline
[[end]]

[[table[| c | c | c |](and):Scene Table]]
\hline
Name          & Type   & Description                    \\ \hline
scene\_id     & string & ID ของฉาก                      \\ \hline
name          & string & ชื่อของอุปกรณ์                 \\ \hline
ch\_bluetooth & bool   & สถานะของอุปกรณ์                \\ \hline
bluetooth     & string & ชนิดของอุปกรณ์                 \\ \hline
ch\_temp      & string & สถานoptionของอุณหภูมิ          \\ \hline
temp          & double & ค่าเงื่อนไขของ option อุณหภูมิ \\ \hline
ch\_light     & string & สถานoptionของแสงสว่าง          \\ \hline
light         & double & ค่าเงื่อนไขของ option แสงสว่าง \\ \hline
ch\_time      & string & สถานะของการตั้งเวลา            \\ \hline
time          & string & เวลาที่ตั้ง                    \\ \hline
[[end]]


[[image(raspberrypi):raspberrypi.png|width=1|caption=Raspberry Pi]]
[[image(IOS):ioslogo.png|width=0.8|caption=IOS Logo]]
[[image(Android):android.jpg|width=0.8|caption=Android Logo]]
[[image(LDR):LDR.jpg|width=0.8|caption=Light Dependent Resistor]]
[[image(icds1802):icds18202.gif|width=0.8|caption=ไอซีเบอร์ DS1820]]
[[image(relay):relay.jpg|width=0.8|caption=รีเลย์ (Relay)]]
[[image(relayCircuit):relayCircuit.jpg|width=0.8|caption=Relay Circuit]]
[[image(android1):arduino1.png|width=0.7|caption=Anduino + LED]]
[[image(android2):arduino2.png|width=0.7|caption=Anduino + XBee]]
[[image(NRF24L01):sl.jpg|width=0.8|caption=NRF24L01]]
[[image(IRTransmitter):irtransmitter.jpg|width=0.5|caption=IRTransmitter]]
[[image(IRReceiver):irreceiver.jpg|width=0.5|caption=IR Receiver]]
[[image(simulat):simulat23.jpg|width=1|caption=โครงสร้างของระบบ]]
[[image(ios1):1.jpg|width=0.35|caption=เมนูต่างๆของ iDevices Homekit]]
[[image(ios2):2.jpg|width=0.35|caption=เพี่มอุปกรณ์ที่ต้องการเชื่อมต่อ]]
[[image(ios3):3.jpg|width=0.35|caption=อุปกรณ์ทั้งหมดที่เพิ่มเข้ามา]]
[[image(ios4):4.jpg|width=0.35|caption=เลือกอุปกรณ์ในชุดคำสั่ง]]
[[image(ios5):5.jpg|width=0.35|caption=คำพูดที่ต้องการใช้ในการสั่งเสียง]]
[[image(ios6):6.jpg|width=0.35|caption=ชุดคำสั่งทั้งหมด]]
[[image(ios7):7.jpg|width=0.35|caption=เพิ่มชุดคำสั่งลงใน  Schedules]]
[[image(ios8):8.jpg|width=0.35|caption=เลือกชุดคำสั่งที่ต้องการลงใน Schedule]]
[[image(ios9):9.jpg|width=0.35|caption=เลือก วัน/เวลา ที่ต้องการลงใน Schedule]]
[[image(login1):login1.jpg|width=0.35|caption=sign in ด้วย google account]]
[[image(login2):login2.jpg|width=0.35|caption=เลือก google account]]
[[image(setIPStart):setipstart.jpg|width=0.35|caption=ตั้งค่า IP ของ web service]]
[[image(toolpageempty):toolpageempty.jpg|width=0.35|caption=tool page]]
[[image(hammenu):hammenu.jpg|width=0.35|caption=menu]]
[[image(addtool):addtool.jpg|width=0.35|caption=เพิ่มอุปกรณ์]]
[[image(showtoolpage):showtoolpage.jpg|width=0.35|caption=แสดง tool ที่เพิ่มไว้]]
[[image(scenepage):scenepage.jpg|width=0.35|caption=Scene page]]
[[image(addscenechoosetool):addscenechoosetool.jpg|width=0.35|caption=ตั้งชื่อScene,เลือกtool]]
[[image(setoptionscene):setoptionscene.jpg|width=0.35|caption=Set option ของ Scene]]
[[image(settime):settime.jpg|width=0.35|caption=Set Time]]
[[image(settemp):settemp.jpg|width=0.35|caption=Set Temperature]]
[[image(setlight):setlight.jpg|width=0.35|caption=Set Brightness]]
[[image(setblue):setblue.jpg|width=0.35|caption=Set Bluetooth]]
[[image(showscene):showscene.jpg|width=0.35|caption=แสดง scene ที่เพิ่มไว้]]
[[image(setbluemac):setbluemac.jpg|width=0.35|caption=Set Mac Bluetooth]]
[[image(setip):setip.jpg|width=0.35|caption=แก้ไข IP]]


		

